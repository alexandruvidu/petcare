/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BookingStatusEnum } from './BookingStatusEnum';
import {
    BookingStatusEnumFromJSON,
    BookingStatusEnumFromJSONTyped,
    BookingStatusEnumToJSON,
    BookingStatusEnumToJSONTyped,
} from './BookingStatusEnum';

/**
 * 
 * @export
 * @interface BookingDTO
 */
export interface BookingDTO {
    /**
     * 
     * @type {string}
     * @memberof BookingDTO
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof BookingDTO
     */
    startDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof BookingDTO
     */
    endDate: Date;
    /**
     * 
     * @type {BookingStatusEnum}
     * @memberof BookingDTO
     */
    status: BookingStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof BookingDTO
     */
    notes: string;
    /**
     * 
     * @type {string}
     * @memberof BookingDTO
     */
    clientId: string;
    /**
     * 
     * @type {string}
     * @memberof BookingDTO
     */
    sitterId: string;
    /**
     * 
     * @type {string}
     * @memberof BookingDTO
     */
    petId: string;
    /**
     * 
     * @type {string}
     * @memberof BookingDTO
     */
    clientName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BookingDTO
     */
    sitterName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BookingDTO
     */
    petName?: string | null;
}



/**
 * Check if a given object implements the BookingDTO interface.
 */
export function instanceOfBookingDTO(value: object): value is BookingDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    if (!('endDate' in value) || value['endDate'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('notes' in value) || value['notes'] === undefined) return false;
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('sitterId' in value) || value['sitterId'] === undefined) return false;
    if (!('petId' in value) || value['petId'] === undefined) return false;
    return true;
}

export function BookingDTOFromJSON(json: any): BookingDTO {
    return BookingDTOFromJSONTyped(json, false);
}

export function BookingDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookingDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'startDate': (new Date(json['startDate'])),
        'endDate': (new Date(json['endDate'])),
        'status': BookingStatusEnumFromJSON(json['status']),
        'notes': json['notes'],
        'clientId': json['clientId'],
        'sitterId': json['sitterId'],
        'petId': json['petId'],
        'clientName': json['clientName'] == null ? undefined : json['clientName'],
        'sitterName': json['sitterName'] == null ? undefined : json['sitterName'],
        'petName': json['petName'] == null ? undefined : json['petName'],
    };
}

export function BookingDTOToJSON(json: any): BookingDTO {
    return BookingDTOToJSONTyped(json, false);
}

export function BookingDTOToJSONTyped(value?: BookingDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'startDate': ((value['startDate']).toISOString()),
        'endDate': ((value['endDate']).toISOString()),
        'status': BookingStatusEnumToJSON(value['status']),
        'notes': value['notes'],
        'clientId': value['clientId'],
        'sitterId': value['sitterId'],
        'petId': value['petId'],
        'clientName': value['clientName'],
        'sitterName': value['sitterName'],
        'petName': value['petName'],
    };
}

